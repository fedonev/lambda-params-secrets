# Run linter and unit tests against PR branches
name: Check PR

on:
  pull_request:
    branches: [main]
    types: [opened, reopened, synchronize]

jobs:
  lint-message:
    runs-on: ubuntu-latest
    steps:
      - name: Get the Commit Messages # get JSON commit messages
        run: >
          gh pr view ${{ github.event.number }} -R ${{ github.event.repository.full_name }} --json commits
          --jq '.commits | map(.messageHeadline)' > messages.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Lint the Messages # Exit 0 if every commit's message subject line is a conventional commit
        run: |
          cat messages.json
          jq --exit-status --arg pattern "$COMMIT_MSG" 'map(. | test($pattern)) | all' messages.json
        env:
          COMMIT_MSG: '^(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test)!?(\([a-z0-9-]*\))?:\ .{3,}$|^[iI]nitial [cC]ommit$'

  lint-and-test-code:
    runs-on: ubuntu-latest
    needs: lint-message
    if: ${{ !contains(github.head_ref, 'release-please') }} # release-please--branches--main--components--*
    steps:
      - name: Checkout
        uses: actions/checkout@v4 # https://github.com/actions/checkout
      - name: Setup
        uses: actions/setup-node@v4 # https://github.com/actions/setup-node
        with:
          node-version: 20
          cache: npm
      - run: npm ci
      - run: npm run build
      - name: Lint Check
        run: npx eslint .
      - run: npm test
